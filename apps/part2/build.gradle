plugins {
    id 'java'
    id 'idea'
    id 'groovy'
    // id 'org.springframework.boot' version '3.0.4'
    // id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'net.bookdevcontainer.todolist'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // session
    // implementation 'org.springframework.session:spring-session-data-redis'
    // implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'
    // runtimeOnly 'com.mysql:mysql-connector-j'
    // runtimeOnly 'org.postgresql:postgresql:42.2.5'

    // retry
    implementation 'io.github.resilience4j:resilience4j-retry:2.0.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
}

// https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin
jib {
    from {
        image = 'eclipse-temurin:17.0.6_10-jre-alpine'
    }
    to {
        image = System.getenv('ACR_REGISTRY') + '/' + System.getenv('ACR_REPOSITORY')
        tags = [System.getenv('BITBUCKET_BUILD_NUMBER') + '-' + System.getenv('BITBUCKET_COMMIT')]
        auth {
            username = System.getenv('ACR_USERNAME')
            password = System.getenv('ACR_PASSWORD')
        }
    }
    container {
        ports = ['8080','2222']
        jvmFlags = [
                '-Xms512m',
                '-Xmx512m',
                '-Dfile.encoding=UTF-8',
                '-Duser.timezone=Asia/Tokyo',
                // '-javaagent:applicationinsights-agent-2.6.2.jar',
                '-XX:StartFlightRecording'
        ]
        entrypoint = ['sh','webapp_startup.sh']
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
